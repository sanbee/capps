<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">


<!-- This is the param set for sdstat -->

<task type="function" name="sdstat" startup="false" category="single dish">

  <shortdescription>ASAP SD task: list statistics of spectral region</shortdescription>

  <description>
        ASAP SD spectral region statistics task:


        Modified 2009-09-03 KS
        Modified 2008-06-23 TN
        Modified 2008-01-30 TT
        Task Version 2007-03-04 STM
</description>

  <input>

    <param type="string" name="sdfile"  mustexist="true">
    <description>name of input SD dataset</description>
    <value></value>
    </param>

    <param type="any" name="antenna">
            <description>antenna name or id (only effective for MS input)</description>
            <any type="variant" limittype="string int"/>
            <value type="int">0</value>
    </param> 

    <param type="string" name="fluxunit">
            <description>units for line flux (K,Jy) (''=current)</description>
            <value></value>
    </param>

    <param type="any" name="telescopeparm" subparam='true'>
            <description>param of telescope for flux conversion</description>
            <any type='variant' limittype='string doubleArray'/>
            <value type='string'/>
    </param>

    <param type="string" name="specunit">
            <description>units for spectral axis (channel,km/s,GHz)</description>
            <value></value>
            <allowed kind="enum">
            <value></value>
            <value>channel</value>
            <value>km/s</value>
            <value>GHz</value>
            <value>MHz</value>
            <value>kHz</value>
            <value>Hz</value>
    </allowed>
    </param>

    <param type="string" name="frame">
            <description>frequency reference frame, e.g. LSRK (''=current)</description>
            <value></value>
    </param>

    <param type="string" name="doppler">
            <description>doppler convention, e.g. RADIO (''=current)</description>
            <value></value>
    </param>


    <param type="intArray" name="scanlist">
            <description>list of scans to use (e.g. [1,2,3,4])</description>
            <value></value>
    </param>

    <param type="string" name="field">
            <description>string for selection by source name</description>
            <value></value>
    </param>

    <param type="intArray" name="iflist">
            <description>list of IF ids to select (e.g. [0,1])</description>
            <value></value>
    </param>

    <param type="intArray" name="pollist">
            <description>list of polarization ids to select (e.g. [0,1])</description>
            <value></value>
    </param>

    <param type="intArray" name="masklist">
            <description>list of mask regions to INCLUDE in stats</description>
            <value></value>
    </param>

    <param type="bool" name="invertmask">
            <description>invert mask (EXCLUDE masklist instead)</description>
            <value>False</value>
    </param>

    <param type="bool" name="interactive">
            <description>determines interactive masking</description>
            <value>False</value>
    </param>

    <param type="string" name="statfile">
            <description>name of output file for line statistics</description>
            <value></value>
    </param>

    <param type="string" name="format">
            <description>format string to print statistic values</description>
            <value>3.3f</value>
    </param>

    <param type="bool" name="overwrite">
            <description>overwrite the statistics file if already exists</description>
            <value>False</value>
    </param>

    <constraints>
            <when param="fluxunit">
                <equals value=""/>
                <equals value="K">
                        <default param="telescopeparm"><value type='string'></value></default>
                </equals>
                <equals value="k">
                        <default param="telescopeparm"><value type='string'></value></default>
                </equals>
                <equals value="Jy">
                        <default param="telescopeparm"><value type='string'></value></default>
                </equals>
                <equals value="jy">
                        <default param="telescopeparm"><value type='string'></value></default>
                </equals>
            </when>

    </constraints>

    </input>
    <output>
    <param type="any" name="xstat">
            <description>RETURN ONLY: a Python dictionary of line statistics</description>
            <any type='variant'/>
            <value>{}</value>
    </param>
    </output>

  <returns type="void"/>
  <!-- <returns type="variant"/> -->

  <example>
        Keyword arguments:
        sdfile -- name of input SD dataset
                default: none - must input file name
                example: 'mysd.asap'
                         See sdcal for allowed formats.
        antenna -- antenna name or id (only effective for MS input). 
        fluxunit -- units for line flux
                options: (str) 'K','Jy',''
                default: '' (keep current fluxunit)
                WARNING: For GBT data, see description below.
            &gt;&gt;&gt; fluxunit expandable parameter
                 telescopeparm -- the telescope characteristics
                        options: (str) name or (list) list of gain info
                        default: '' (none set)
                        example: if telescopeparm='', it tries to get the telescope
                                 name from the data.
                                 Full antenna parameters (diameter,ap.eff.) known
                                 to ASAP are
                                 'ATPKSMB', 'ATPKSHOH', 'ATMOPRA', 'DSS-43',
                                 'CEDUNA','HOBART'. For GBT, it fixes default fluxunit
                                 to 'K' first then convert to a new fluxunit.
                                 telescopeparm=[104.9,0.43] diameter(m), ap.eff.
                                 telescopeparm=[0.743] gain in Jy/K
                                 telescopeparm='FIX' to change default fluxunit
                                 see description below

        specunit -- units for spectral axis
                options: (str) 'channel','km/s','GHz','MHz','kHz','Hz',''
                default: '' (=current)
        frame -- frequency frame for spectral axis
                options: (str) 'LSRK','REST','TOPO','LSRD','BARY',
                         'GEO','GALACTO','LGROUP','CMB'
                default: currently set frame in scantable
                WARNING: frame='REST' not yet implemented
        doppler -- doppler mode
                options: (str) 'RADIO','OPTICAL','Z','BETA','GAMMA'
                default: currently set doppler in scantable
        scanlist -- list of scan numbers to process
                default: [] (use all scans)
                example: [21,22,23,24]
        field -- selection string for selecting scans by name
                default: '' (no name selection)
                example: 'FLS3a*'
                         this selection is in addition to scanlist
                         iflist, and pollist
        iflist -- list of IF id numbers to select
                default: [] (use all IFs)
                example: [15]
                         this selection is in addition to field, scanlist
                         and pollist
        pollist -- list of polarization id numbers to select
                default: [] (use all pols)
                example: [1]
                         this selection is in addition to field, scanlist
                         and iflist
        masklist -- list of mask regions to INCLUDE in stats
                default: [] (whole spectrum)
                example: [4000,4500] for one region
                         [[1000,3000],[5000,7000]]
                         these must be pairs of [lo,hi] boundaries
        invertmask -- invert mask (EXCLUDE masklist instead)
                options: (bool) True,False
                default: false
        interactive -- determines interactive masking
                options: (bool) True,False
                default: False
                example: interactive=True allows adding and deleting mask 
                         regions by drawing rectangles on the plot with mouse. 
                         Draw a rectangle with LEFT-mouse to ADD the region to 
                         the mask and with RIGHT-mouse to DELETE the region. 
        statfile -- name of output file for line statistics
                default: '' (no output statistics file)
                example: 'stat.txt'
        format -- format string to print statistic values
                default: '3.3f'
        overwrite -- overwrite the statistics file if already exists 
                options: (bool) True,False
                default: False

        -------------------------------------------------------------------
                Returns: a Python dictionary of line statistics
                   keys: 'rms','stddev','max','min','max_abscissa',
                         'min_abscissa','sum','median','mean','totint','eqw'
                example: xstat=sdstat(); print "rms = ",xstat['rms']
                         these can be used for testing in scripts or
                         for regression

                         'max_abscissa' and 'min_abscissa' refer to the abscissa
                         (channel/frequency/velocity) of max and min intensity.
                         'totint' is the integrated intensity (sum*dx)
                         where dx is the abscissa interval in 'specunit'.
                         'eqw' is equivalent width (totint/mag) where mag
                         is either max or min depending on which has
                         greater magnitude. 
                         Note that 'max_abscissa', 'min_abscissa', 'totint' 
                         and 'eqw' are quantities (python dictionaries with
                         keys, 'unit' and 'value').


       DESCRIPTION:

        Task sdstat computes basic statistics (rms,mean,median,sum)
        for single-dish spectra.  It assumes that the spectra have
        been calibrated.  Furthermore, it assumes that any
        time and channel averaging/smoothing has also already been done as
        there are no controls for these.  Note that you can run sdcal
        with calmode='none' and do selection, writing out a new
        scantable.

        Note that multiple scans and IFs can in principle be handled, but
        we recommend that you use scanlist, field, iflist, and pollist to give a
        single selection for each run.

        WARNING: If you do have multiple scantable rows, then the returning 
        values will be lists.

        ASAP recognizes the data of the "AT" telescopes, but currently
        does not know about the GBT or any other telescope. This task
        does know about GBT. Telescope name is obtained from the data.
        If you wish to change the fluxunit (see below), and telescopeparm='',
        for the AT telescopes it will use internal telescope parameters for
        flux conversion. For GBT, it will use an approximate aperture
        efficiency conversion.  If you give telescopeparm a list, then
        if the list has a single float it is assumed to be the gain in Jy/K,
        if two or more elements they are assumed to be telescope diameter (m)
        and aperture efficiency respectively.

        WARNING for the GBT raw SDFITS format data as input:
        Currently, all SDtasks cannot handle GBT raw SDFITS format data
        (in which the data are stored in multiple tables within SDFITS).
        It may be still possible to reduce GBT data after some
        preprocessing (outside CASA) of the raw SDFITS to a SDFITS with
        a single data table or to other data formats handled by SDtasks.

  </example>

</task>

</casaxml>
