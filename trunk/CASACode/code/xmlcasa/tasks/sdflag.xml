<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">


<!-- This is the param set for sdflag -->

<task type="function" name="sdflag" startup="false" category="single dish">

  <shortdescription>ASAP SD spectral flagging task </shortdescription>


  <description>
        ASAP SD spectral/row flagging task (based on the ALMATST5 recommendations):

        Task Version 2008-01-31 TT
</description>

  <input>

    <param type="string" name="sdfile"  mustexist="true">
    <description>name of input SD dataset</description>
    <value></value>
    </param>

    <param type="any" name="antenna">
            <description>antenna name or id (only effective for MS input)</description>
            <any type="variant" limittype="string int"/>
            <value type="int">0</value>
    </param> 

    <param type="intArray" name="scanlist">
	    <description>list of scans to use (e.g. [1,2,3,4])</description>
	    <value></value>
    </param>

    <param type="string" name="field">
	    <description>string for selection by source name</description>
	    <value></value>
    </param>

    <param type="intArray" name="iflist">
	    <description>list of IF ids to select (e.g. [0,1])</description>
	    <value></value>
    </param>

    <param type="any" name="pollist">
	    <description>list of polarization by ids or names to select (e.g. [0,1])</description>
            <any type="variant" limittype="intArray stringArray"/>
	    <value type="intArray"></value>
    </param>

    <param type="intArray" name="maskflag">
            <description>list of mask regions to flag/unflag</description>
            <value></value>
    </param>

    <param type="intArray" name="flagrow">
            <description>list of row numbers to apply row-based flagging/unflagging</description>
            <value></value>
    </param>

    <param type="bool" name="clip">
            <description>flag data outside a specified range</description>
            <value>False</value>
    </param>

    <param type="any" name="clipminmax" subparam="true">
            <description>range of data that will NOT be flagged</description>
            <any type="variant" limittypes="doubleArray doubleArrayArray"/>
            <value type="doubleArray"></value>
    </param>

    <param type="any" name="clipoutside" subparam="true">
            <description>clip outside the range, or within it</description>
            <any type="variant" limittypes="bool boolArray"/>
            <value type="bool">True</value>
    </param>

    <param type="string" name="flagmode">
            <description>flag mode (flag,unflag)</description>
            <value>flag</value>
    </param>

    <param type="string" name="outfile">
            <description>name of output file</description>
            <value></value>
    </param>

    <param type="string" name="outform">
            <description>output file format (ASCII,MS,SDFITS,ASAP)</description>
            <value>ASAP</value>
            <allowed kind="enum">
            <value>ASCII</value>
            <value>ascii</value>
            <value>MS</value>
            <value>ms</value>
            <value>MS2</value>
            <value>ms2</value>
            <value>SDFITS</value>
            <value>sdfits</value>
            <value>ASAP</value>
            <value>asap</value>
            </allowed>

    </param>

    <param type="bool" name="overwrite">
            <description>overwrite the output file if already exists</description>
            <value>True</value>
    </param>

    <param type="int" name="plotlevel">
            <description>control for plotting of results</description>
            <value>0</value>
    </param>

    <constraints>
            <when param="clip">
                    <equals type="bool" value="False"/>
                    <equals type="bool" value="True">
                            <default param="clipminmax"><value type="doubleArray"></value></default>
                            <default param="clipoutside"><value type="bool">True</value></default>
                    </equals>
            </when>
    </constraints>

    </input>

  <returns type="void"/>

  <example>
        Keyword arguments:
        sdfile -- name of input SD dataset
        antenna -- antenna name or id (only effective for MS input). 
        scanlist -- list of scan numbers to process
                default: [] (use all scans)
                example: [21,22,23,24]
                         this selection is in addition to field
                         and iflist
        field -- selection string for selecting scans by name
                default: '' (no name selection)
                example: 'FLS3a*'
                         this selection is in addition to scanlist
                         and iflist
        iflist -- list of IF id numbers to select
                default: [] (use all IFs)
                example: [15]
                         this selection is in addition to scanlist
                         and field
        pollist -- list of polarization id numbers to select
                default: [] (use all polarizations)
                example: [1]
                         this selection is in addition to scanlist,
                         field, and iflist
        maskflag -- list of mask regions to apply flag/unflag 
                default: [] (entire spectrum)
                example: [[1000,3000],[5000,7000]]
                WARNING: if one or more rows are given in flagrow, or 
                         clip=True, this parameter is ignored
        flagrow -- list of row numbers to apply flag/unflag
                default: [] (no row selection)
                example: [0, 2, 3]
                WARNING: this parameter is effective only when 
                         one or more row numbers are given explicitly 
                         and also clip=False
        clip -- flag data that are outside a specified range
                options: (bool)True,False
                default: False
             >>> clip expandable parameters
                clipminmax -- range of data that will NOT be flagged
                        default: [] means do not use clip option
                        example: [0.0,1.5]
                clipoutside -- clip OUTSIDE the range ?
                        options: (bool)True,False
                        default: True
                        example: clipoutside=False means flag data WITHIN the range.
        flagmode -- flag mode
                default: 'flag'
                options: 'flag','unflag'
                WARNING: an option 'restore' has been abolished since CASA 3.2. 
                         To get flag info, use a new SD task 'sdflagmanager'. 
        outfile -- Name of output file
                default: ''
                WARNING: by default (outfile=''), actual output file name is 
                         set as follows: 
                           (1) if overwrite=True, sdfile (input) will be overwritten. 
                           (2) if overwrite=False, outfile will be &lt;sdfile&gt;_f. 
        outform -- format of output file
                options: 'ASCII','SDFITS','MS','ASAP'
                default: 'ASAP'
                example: the ASAP format is easiest for further sd
                         processing; use MS for CASA imaging.
        overwrite -- overwrite the output file if already exists
                options: (bool) True,False
                default: True
                WARNING: default value has been changed to True since CASA 3.2. 
                         if outform='ASCII', this parameter is ignored 
        plotlevel -- control for plotting of results
                options: (int) 0=none, 1=some, 2=more, &lt;0=hardcopy
                default: 0 (no plotting)
                example: plotlevel&lt;0 as abs(plotlevel), e.g.
                         -1 => hardcopy of final plot (will be named
                         &lt;outfile&gt;_flag.eps)
                WARNING: be careful plotting in fsotf mode!

        -------------------------------------------------------------------

        DESCRIPTION:

        Task sdflag performs simple channel/row based flagging on spectra.
        Currently, the available ways of flagging include: (1) channel 
        based flagging by specifying regions in channel, (2) channel 
        based flagging by specifying a range of spectral value, and (3) 
        row based flagging by specifying a list of row numbers. 
        These three ways of flagging can not be executed simultaneously. 
        The first one (channel based) can be executed by giving flag 
        regions in maskflag, no row in flagrow (=[]), and setting 
        clip=False. The second one (channel based intensity clipping) 
        can run when you set clip=True and specify a range in clipminmax 
        (the values given in maskflag and flagrow are ignored). The third 
        one (row based flagging) is executed when one or more rows are 
        specified in flagrow and clip is set False. This is not 
        interactive flagging. 
        If plotlevel&gt;=1, the task asks you if you really apply the 
        flags before it is actually written to the data with a plot 
        indicating flagged regions.
        Please note that this task is still experimental.

        WARNING for overwrite option:
        Since CASA 3.2, the default value of the option 'overwrite' has 
        been changed to True, thereby the current dataset (sdfile) is 
        overwritten unless a different file name is set to outfile. 

        WARNING for the GBT raw SDFITS format data as input:
        Currently, all SDtasks cannot handle GBT raw SDFITS format data
        (in which the data are stored in multiple tables within SDFITS).
        It may be still possible to reduce GBT data after some
        preprocessing (outside CASA) of the raw SDFITS to a SDFITS with
        a single data table or to other data formats handled by SDtasks.
 
  </example>

</task>

</casaxml>
